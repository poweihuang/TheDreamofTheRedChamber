install.packages("jiebaR")
library(jiebaR)
library("jiebaR")
library("Rjieba")
install.packages("Rjieba")
install.packages("Rcpp")
install.packages("jiebaR")
install.packages("CRAN")
install.packages("jieba")
install.packages("jiebaR")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/jiebaR/jiebaR_0.0.3.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/jiebaR/jiebaR_0.9.1.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
version
version(Rcpp)
package.version(Rcpp)
packageVersion("Rcpp")
packageurl <- "https://cran.r-project.org/bin/macosx/mavericks/contrib/3.3/jiebaR_0.9.1.tgz"
install.packages(packageurl, contriburl=NULL, type="source")
install.packages("jiebaRD")
install.packages("jiebaR")
R.version
updateR()
install.packages('devtools') #assuming it is not already installed
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
library("updateR")
install.packages("jiebaR")
setwd("~/Desktop")
data = read.table("RedDream")
data = read.table("RedDream.txt")
data = read.table("RedDream.rtf")
data = read.table("RedDream.txt")
data = readChar("RedDream.txt")
data = readChar("RedDream.txt",nchars=1e6)
data
View(data)
rm(data)
data = read.txt("RedDream.txt")
data = read.table("RedDream.txt")
load("~/Desktop/RedDream.rtf")
load("~/Desktop/RedDream.txt")
load("~/Desktop/RedDream.txt")
data = read.table("RedDream.txt")
View(data)
View(data)
str <- toString(data)
str
rm(str)
data = read.table("RedDream.txt", sep = "")
View(data)
wk['data']
wk = worker()
library(jiebaR)
wk = worker()
wk['data']
rm(wk)
segment(data)
segment("data")
wk = worker()
wk['~/Desktop/RedDream.txt']
segment('~/Desktop/RedDream.txt', wk)
wk <= '~/Desktop/RedDream.txt'
wk <= './RedDream.txt'
wk['./RedDream.txt']
wk
setwd(".")
wk <= '~/Desktop/RedDream.txt'
wk <= './RedDream.txt'
setwd("~/R/Rjieba")
wk <= './RedDream.txt'
rm(data)
library(plyr)
tf <- count(wk)
install.packages("plyr")
library(plyr)
tf <- count(wk)
setwd("~/R/Rjieba")
jieba <- './RedDream.segment.2016-11-27_17_49_03.txt'
jieba
rm(jieba)
jieba <- read.table("RedDream.segment.2016-11-27_17_49_03.txt")
View(jieba)
as.list(jieba)
list <- as.list(jieba)
list
tf <- count(list)
tf <- count(jieba)
View(tf)
View(jieba)
View(tf)
rm(jieba)
rm(tf)
library(tm)
install.package("tm")
install.packages("tm")
library(tm)
install.packages("nlp")
install.packages("slam")
library(tm)
library(slam)
install.packages("rJava")
install.packages("Rwordseg", repos="http://R-Forge.R-project.org")
install.packages("tm")
install.packages("wordcloud")
install.packages("RCurl")
library(tm)
install.packages("tm",dependencies=TRUE)
library(tm)
install.packages("slam")
library(tm)
,ibrary(slam)
library(slam)
install.packages("tm")
install.packages("slam")
library(tm)
install.packages("slam")
library(tm)
library(tmcn)
install.packages("tmcn", repos="http://R-Forge.R-project.org", type="source")
library(tmcn)
mycropus <- Corpus(DirSource("RedDream.segment.2016-11-27_17_49_03.txt"), list(langue = NA))
mycropus <- Corpus(DirSource("RedDream.segment.2016-11-27_17_49_03.txt"), list(langue = NA))
mycropus <- Corpus(DirSource("RedDream.segment.2016-11-27_17_49_03"), list(langue = NA))
install.packages("tmcn", repos="http://R-Forge.R-project.org", type="source")
install.packages("tmcn", repos="http://R-Forge.R-project.org")
y
library(tmcn)
install.packages("tmcn", repos="http://R-Forge.R-project.org")
install.packages("http://download.r-forge.r-project.org/src/contrib/tmcn_0.1-4.tar.gz", repos = NULL, type = "source")
library(tmcn)
rjava
library(rjavea)
library(rjava)
install.packages("rjava")
install.packages("rJava")
library(rJava)
install.packages("tmcn")
install.packages("~/Downloads/tmcn_0.1-4.tar", repos=NULL, type="source")
install.packages("~/Downloads/tmcn_0.1-4.tar", repos=NULL, type="source")
library(tm)
library(tmcn)
tdm <- TermDocumentMatrix(mycorpus, control = list(wordLengths = c(1, Inf)))
mycorpus <- mycropus
rm(cropus)
rm(mycropus)
tdm <- TermDocumentMatrix(mycorpus, control = list(wordLengths = c(1, Inf)))
tdm
inspect(tdm[1:10m, 1:2])
inspect(tdm[1:10, 1:2])
inspect(tdm[1:10, 1])
inspect(tdm[1:10, ])
inspect(tdm[1:200, ])
sort(tdm)
summary(tdm)
summary(tdm$RedDream.segment.2016-11-27_17_49_03.txt)
tdm$doc
tdm
summary(tdm)
sort(tdm[1:200, ])
sparseMatrix(i=mydata.tdm$i, j=mydata.tdm$j, x=mydata.tdm$v)
sparseMatrix(i=tdm$i, j=tdm$j, x=tdm$v)
mtr <- as.matrix(tdm)
sortmtr <- sort(rowSums(m),decreasing=TRUE)
sortmtr <- sort(rowSums(mtr),decreasing=TRUE)
sortmrt
sormtr
sortmtr
View(mtr)
firstpart <- Corpus(DirSource("part one"), list(langue = NA))
secondpart <- (DirSource("part two"), list(langue = NA))
secondpart <- (DirSource("part two"), list(langue = NA))
secondpart <- Corpus(DirSource("part two"), list(langue = NA))
tdm1 <- TermDocumentMatrix(firstpart, control = list(wordLengths = c(1, Inf)))
tdm2 <- TermDocumentMatrix(secondpart, control = list(wordLengths = c(1, Inf)))
mtr1 <- as.matrix(tdm1)
mtr2 <- as.matrix(tdm2)
source('~/R/Rjieba/Untitled.R')
sortmtr2 <- sort(rowSum(mtr2), decreasing=T)
sortmtr2 <- sort(rowSums(mtr2), decreasing=T)
sortmtr1 <- sort(rowSums(mtr1), decreasing=T)
sortmtr1
sortmrt2
sortmtr2
sortmtr1
library(wordcloud)
cloud1 <- data.frame(word = names(sortmtr1), freq = sortmtr1)
wordcloud(cloud1$word, cloud1$freq, min.freq = 10, random.order = F, ordered.colors = F,
colors = rainbow(length(row.names(mtr1))))
wordcloud(cloud1$word, cloud1$freq, min.freq = 100, random.order = F, ordered.colors = F,
colors = rainbow(length(row.names(mtr1))))
par(family=(“Heiti TC Light”))
par(family=("Heiti TC Light"))
wordcloud(cloud1$word, cloud1$freq, min.freq = 100, random.order = F, ordered.colors = F,
colors = rainbow(length(row.names(mtr1))))
cloud2 <- data.frame(word = names(sortmtr2), freq = sortmtr2)
wordcloud(cloud2$word, cloud2$freq, min.freq = 10, random.order = F, ordered.colors = F,
colors = rainbow(length(row.names(mtr2))))
wordcloud(cloud2$word, cloud2$freq, min.freq = 100, random.order = F, ordered.colors = F,
colors = rainbow(length(row.names(mtr2))))
wordcloud(cloud2$word, cloud2$freq, min.freq = 100, random.order = F, ordered.colors = F,
colors = brewer.pal(length(row.names(mtr2))))
wordcloud(cloud2$word, cloud2$freq, min.freq = 50, random.order = F, ordered.colors = F,
colors = rainbow(length(row.names(mtr2))))
mtr
sortmtr
